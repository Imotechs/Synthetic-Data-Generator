# Use an official Python runtime as a parent image
FROM python:3.9-slim-buster

# Set environment variables
ENV PYTHONUNBUFFERED 1
ENV PORT 8000 # Default port for Gunicorn
ENV DJANGO_SETTINGS_MODULE=your_project_name.settings.production 
# Your production settings file

# Set the working directory in the container
WORKDIR /app

# Install system dependencies for psycopg2 and other tools
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    nginx-extras # Only if you plan to serve static files from nginx within the container (not recommended for Cloud Run) \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the Django project
COPY . .

# Collect static files into STATIC_ROOT defined in settings.py
# This will upload them to GCS if django-storages is configured
RUN python manage.py collectstatic --noinput

# Expose the port that Gunicorn will listen on
EXPOSE ${PORT}

# Run Gunicorn to serve the Django application
# Use 0.0.0.0 to bind to all available interfaces
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "2", "backend.wsgi:application"]
# Adjust --workers based on your instance size and expected load.
# Use your actual project name instead of 'your_project_name'.